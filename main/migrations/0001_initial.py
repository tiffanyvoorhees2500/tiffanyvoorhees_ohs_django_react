# Generated by Django 5.2 on 2025-04-28 15:52

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('retail', models.DecimalField(decimal_places=2, max_digits=10)),
                ('wholesale', models.DecimalField(decimal_places=2, max_digits=10)),
                ('numInBottle', models.IntegerField()),
                ('discontinued', models.BooleanField(default=False)),
                ('originalId', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('pricingType', models.CharField(choices=[('WHOLESALE', 'Wholesale'), ('RETAIL', 'Retail')], default='WHOLESALE', max_length=10, verbose_name='OHS Pricing Type')),
                ('discountType', models.CharField(choices=[('GROUP', 'Group'), ('INDIVIDUAL', 'Individual')], default='GROUP', max_length=10, verbose_name='OHS Discount Type')),
                ('originalId', models.CharField(blank=True, max_length=3, null=True, verbose_name='Original User ID')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AdminOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('originalId', models.CharField(blank=True, max_length=255, null=True)),
                ('orderDate', models.DateTimeField()),
                ('shippingState', models.CharField(max_length=2)),
                ('shippingAmount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('taxAmount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('placedBy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AdminLineItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('originalLineItemId', models.CharField(max_length=255)),
                ('quantity', models.IntegerField()),
                ('basePrice', models.DecimalField(decimal_places=2, max_digits=10)),
                ('percentOff', models.DecimalField(decimal_places=2, max_digits=5)),
                ('finalPrice', models.DecimalField(decimal_places=2, max_digits=10)),
                ('adminOrderId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.adminorder')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ingredient', models.CharField(max_length=255)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('unit', models.CharField(max_length=50)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.product')),
            ],
        ),
        migrations.CreateModel(
            name='UserOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shippingState', models.CharField(max_length=2)),
                ('shippingAmount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('taxAmount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('adminOrder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.adminorder')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserLineItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('originalId', models.CharField(blank=True, max_length=255, null=True)),
                ('quantity', models.IntegerField()),
                ('basePrice', models.DecimalField(decimal_places=2, max_digits=10)),
                ('percentOff', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('finalPrice', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('adminOrder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.adminorder')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('userOrder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.userorder')),
            ],
        ),
    ]
